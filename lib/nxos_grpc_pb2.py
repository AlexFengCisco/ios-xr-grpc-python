# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nxos_grpc.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='nxos_grpc.proto',
  package='NXOSExtensibleManagabilityService',
  syntax='proto3',
  serialized_pb=_b('\n\x0fnxos_grpc.proto\x12!NXOSExtensibleManagabilityService\"@\n\rGetConfigArgs\x12\x10\n\x08YangPath\x18\x01 \x01(\t\x12\r\n\x05ReqID\x18\x02 \x01(\x03\x12\x0e\n\x06Source\x18\x03 \x01(\t\"A\n\x0eGetConfigReply\x12\r\n\x05ReqID\x18\x01 \x01(\x03\x12\x10\n\x08YangData\x18\x02 \x01(\t\x12\x0e\n\x06\x45rrors\x18\x03 \x01(\t\".\n\x0bGetOperArgs\x12\x10\n\x08YangPath\x18\x01 \x01(\t\x12\r\n\x05ReqID\x18\x02 \x01(\x03\"?\n\x0cGetOperReply\x12\r\n\x05ReqID\x18\x01 \x01(\x03\x12\x10\n\x08YangData\x18\x02 \x01(\t\x12\x0e\n\x06\x45rrors\x18\x03 \x01(\t\"*\n\x07GetArgs\x12\x10\n\x08YangPath\x18\x01 \x01(\t\x12\r\n\x05ReqID\x18\x02 \x01(\x03\";\n\x08GetReply\x12\r\n\x05ReqID\x18\x01 \x01(\x03\x12\x10\n\x08YangData\x18\x02 \x01(\t\x12\x0e\n\x06\x45rrors\x18\x03 \x01(\t\"\x87\x01\n\x0e\x45\x64itConfigArgs\x12\x10\n\x08YangPath\x18\x01 \x01(\t\x12\x11\n\tOperation\x18\x02 \x01(\t\x12\x11\n\tSessionID\x18\x03 \x01(\x03\x12\r\n\x05ReqID\x18\x04 \x01(\x03\x12\x0e\n\x06Target\x18\x05 \x01(\t\x12\r\n\x05\x44\x65\x66Op\x18\x06 \x01(\t\x12\x0f\n\x07\x45rrorOp\x18\x07 \x01(\t\"B\n\x0f\x45\x64itConfigReply\x12\r\n\x05ReqID\x18\x01 \x01(\x03\x12\x10\n\x08YangData\x18\x02 \x01(\t\x12\x0e\n\x06\x45rrors\x18\x03 \x01(\t\"D\n\x10\x44\x65leteConfigArgs\x12\x11\n\tSessionID\x18\x01 \x01(\x03\x12\r\n\x05ReqID\x18\x02 \x01(\x03\x12\x0e\n\x06Target\x18\x03 \x01(\t\"D\n\x11\x44\x65leteConfigReply\x12\r\n\x05ReqID\x18\x01 \x01(\x03\x12\x10\n\x08YangData\x18\x02 \x01(\t\x12\x0e\n\x06\x45rrors\x18\x03 \x01(\t\"R\n\x0e\x43opyConfigArgs\x12\x11\n\tSessionID\x18\x01 \x01(\x03\x12\r\n\x05ReqID\x18\x02 \x01(\x03\x12\x0e\n\x06Source\x18\x03 \x01(\t\x12\x0e\n\x06Target\x18\x04 \x01(\t\"B\n\x0f\x43opyConfigReply\x12\r\n\x05ReqID\x18\x01 \x01(\x03\x12\x10\n\x08YangData\x18\x02 \x01(\t\x12\x0e\n\x06\x45rrors\x18\x03 \x01(\t\"<\n\x08LockArgs\x12\x11\n\tSessionID\x18\x01 \x01(\x03\x12\r\n\x05ReqID\x18\x02 \x01(\x03\x12\x0e\n\x06Target\x18\x03 \x01(\t\"<\n\tLockReply\x12\r\n\x05ReqID\x18\x01 \x01(\x03\x12\x10\n\x08YangData\x18\x02 \x01(\t\x12\x0e\n\x06\x45rrors\x18\x03 \x01(\t\">\n\nUnLockArgs\x12\x11\n\tSessionID\x18\x01 \x01(\x03\x12\r\n\x05ReqID\x18\x02 \x01(\x03\x12\x0e\n\x06Target\x18\x03 \x01(\t\">\n\x0bUnLockReply\x12\r\n\x05ReqID\x18\x01 \x01(\x03\x12\x10\n\x08YangData\x18\x02 \x01(\t\x12\x0e\n\x06\x45rrors\x18\x03 \x01(\t\"\x1c\n\x0bSessionArgs\x12\r\n\x05ReqID\x18\x01 \x01(\x03\"@\n\x0cSessionReply\x12\r\n\x05ReqID\x18\x01 \x01(\x03\x12\x11\n\tSessionID\x18\x02 \x01(\x03\x12\x0e\n\x06\x45rrors\x18\x03 \x01(\t\"4\n\x10\x43loseSessionArgs\x12\r\n\x05ReqID\x18\x01 \x01(\x03\x12\x11\n\tSessionID\x18\x02 \x01(\x03\"D\n\x11\x43loseSessionReply\x12\r\n\x05ReqID\x18\x01 \x01(\x03\x12\x10\n\x08YangData\x18\x02 \x01(\t\x12\x0e\n\x06\x45rrors\x18\x03 \x01(\t\"E\n\x08KillArgs\x12\x11\n\tSessionID\x18\x01 \x01(\x03\x12\x17\n\x0fSessionIDToKill\x18\x02 \x01(\x03\x12\r\n\x05ReqID\x18\x03 \x01(\x03\"<\n\tKillReply\x12\r\n\x05ReqID\x18\x01 \x01(\x03\x12\x10\n\x08YangData\x18\x02 \x01(\t\x12\x0e\n\x06\x45rrors\x18\x03 \x01(\t\"0\n\x0cValidateArgs\x12\x11\n\tSessionID\x18\x01 \x01(\x03\x12\r\n\x05ReqId\x18\x02 \x01(\x03\"@\n\rValidateReply\x12\r\n\x05ReqID\x18\x01 \x01(\x03\x12\x10\n\x08YangData\x18\x02 \x01(\t\x12\x0e\n\x06\x45rrors\x18\x03 \x01(\t\".\n\nCommitArgs\x12\x11\n\tSessionID\x18\x01 \x01(\x03\x12\r\n\x05ReqId\x18\x02 \x01(\x03\">\n\x0b\x43ommitReply\x12\r\n\x05ReqID\x18\x01 \x01(\x03\x12\x10\n\x08YangData\x18\x02 \x01(\t\x12\x0e\n\x06\x45rrors\x18\x03 \x01(\t\"-\n\tAbortArgs\x12\x11\n\tSessionID\x18\x01 \x01(\x03\x12\r\n\x05ReqId\x18\x02 \x01(\x03\"=\n\nAbortReply\x12\r\n\x05ReqID\x18\x01 \x01(\x03\x12\x10\n\x08YangData\x18\x02 \x01(\t\x12\x0e\n\x06\x45rrors\x18\x03 \x01(\t2\xb5\x0c\n\x0egRPCConfigOper\x12t\n\tGetConfig\x12\x30.NXOSExtensibleManagabilityService.GetConfigArgs\x1a\x31.NXOSExtensibleManagabilityService.GetConfigReply\"\x00\x30\x01\x12\x62\n\x03Get\x12*.NXOSExtensibleManagabilityService.GetArgs\x1a+.NXOSExtensibleManagabilityService.GetReply\"\x00\x30\x01\x12n\n\x07GetOper\x12..NXOSExtensibleManagabilityService.GetOperArgs\x1a/.NXOSExtensibleManagabilityService.GetOperReply\"\x00\x30\x01\x12u\n\nEditConfig\x12\x31.NXOSExtensibleManagabilityService.EditConfigArgs\x1a\x32.NXOSExtensibleManagabilityService.EditConfigReply\"\x00\x12{\n\x0c\x44\x65leteConfig\x12\x33.NXOSExtensibleManagabilityService.DeleteConfigArgs\x1a\x34.NXOSExtensibleManagabilityService.DeleteConfigReply\"\x00\x12u\n\nCopyConfig\x12\x31.NXOSExtensibleManagabilityService.CopyConfigArgs\x1a\x32.NXOSExtensibleManagabilityService.CopyConfigReply\"\x00\x12q\n\x0cStartSession\x12..NXOSExtensibleManagabilityService.SessionArgs\x1a/.NXOSExtensibleManagabilityService.SessionReply\"\x00\x12{\n\x0c\x43loseSession\x12\x33.NXOSExtensibleManagabilityService.CloseSessionArgs\x1a\x34.NXOSExtensibleManagabilityService.CloseSessionReply\"\x00\x12j\n\x0bKillSession\x12+.NXOSExtensibleManagabilityService.KillArgs\x1a,.NXOSExtensibleManagabilityService.KillReply\"\x00\x12\x63\n\x04Lock\x12+.NXOSExtensibleManagabilityService.LockArgs\x1a,.NXOSExtensibleManagabilityService.LockReply\"\x00\x12i\n\x06UnLock\x12-.NXOSExtensibleManagabilityService.UnLockArgs\x1a..NXOSExtensibleManagabilityService.UnLockReply\"\x00\x12i\n\x06\x43ommit\x12-.NXOSExtensibleManagabilityService.CommitArgs\x1a..NXOSExtensibleManagabilityService.CommitReply\"\x00\x12o\n\x08Validate\x12/.NXOSExtensibleManagabilityService.ValidateArgs\x1a\x30.NXOSExtensibleManagabilityService.ValidateReply\"\x00\x12\x66\n\x05\x41\x62ort\x12,.NXOSExtensibleManagabilityService.AbortArgs\x1a-.NXOSExtensibleManagabilityService.AbortReply\"\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_GETCONFIGARGS = _descriptor.Descriptor(
  name='GetConfigArgs',
  full_name='NXOSExtensibleManagabilityService.GetConfigArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='YangPath', full_name='NXOSExtensibleManagabilityService.GetConfigArgs.YangPath', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.GetConfigArgs.ReqID', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Source', full_name='NXOSExtensibleManagabilityService.GetConfigArgs.Source', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=54,
  serialized_end=118,
)


_GETCONFIGREPLY = _descriptor.Descriptor(
  name='GetConfigReply',
  full_name='NXOSExtensibleManagabilityService.GetConfigReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.GetConfigReply.ReqID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='YangData', full_name='NXOSExtensibleManagabilityService.GetConfigReply.YangData', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Errors', full_name='NXOSExtensibleManagabilityService.GetConfigReply.Errors', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=120,
  serialized_end=185,
)


_GETOPERARGS = _descriptor.Descriptor(
  name='GetOperArgs',
  full_name='NXOSExtensibleManagabilityService.GetOperArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='YangPath', full_name='NXOSExtensibleManagabilityService.GetOperArgs.YangPath', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.GetOperArgs.ReqID', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=187,
  serialized_end=233,
)


_GETOPERREPLY = _descriptor.Descriptor(
  name='GetOperReply',
  full_name='NXOSExtensibleManagabilityService.GetOperReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.GetOperReply.ReqID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='YangData', full_name='NXOSExtensibleManagabilityService.GetOperReply.YangData', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Errors', full_name='NXOSExtensibleManagabilityService.GetOperReply.Errors', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=235,
  serialized_end=298,
)


_GETARGS = _descriptor.Descriptor(
  name='GetArgs',
  full_name='NXOSExtensibleManagabilityService.GetArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='YangPath', full_name='NXOSExtensibleManagabilityService.GetArgs.YangPath', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.GetArgs.ReqID', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=300,
  serialized_end=342,
)


_GETREPLY = _descriptor.Descriptor(
  name='GetReply',
  full_name='NXOSExtensibleManagabilityService.GetReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.GetReply.ReqID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='YangData', full_name='NXOSExtensibleManagabilityService.GetReply.YangData', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Errors', full_name='NXOSExtensibleManagabilityService.GetReply.Errors', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=344,
  serialized_end=403,
)


_EDITCONFIGARGS = _descriptor.Descriptor(
  name='EditConfigArgs',
  full_name='NXOSExtensibleManagabilityService.EditConfigArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='YangPath', full_name='NXOSExtensibleManagabilityService.EditConfigArgs.YangPath', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Operation', full_name='NXOSExtensibleManagabilityService.EditConfigArgs.Operation', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='SessionID', full_name='NXOSExtensibleManagabilityService.EditConfigArgs.SessionID', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.EditConfigArgs.ReqID', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Target', full_name='NXOSExtensibleManagabilityService.EditConfigArgs.Target', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='DefOp', full_name='NXOSExtensibleManagabilityService.EditConfigArgs.DefOp', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ErrorOp', full_name='NXOSExtensibleManagabilityService.EditConfigArgs.ErrorOp', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=406,
  serialized_end=541,
)


_EDITCONFIGREPLY = _descriptor.Descriptor(
  name='EditConfigReply',
  full_name='NXOSExtensibleManagabilityService.EditConfigReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.EditConfigReply.ReqID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='YangData', full_name='NXOSExtensibleManagabilityService.EditConfigReply.YangData', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Errors', full_name='NXOSExtensibleManagabilityService.EditConfigReply.Errors', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=543,
  serialized_end=609,
)


_DELETECONFIGARGS = _descriptor.Descriptor(
  name='DeleteConfigArgs',
  full_name='NXOSExtensibleManagabilityService.DeleteConfigArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='SessionID', full_name='NXOSExtensibleManagabilityService.DeleteConfigArgs.SessionID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.DeleteConfigArgs.ReqID', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Target', full_name='NXOSExtensibleManagabilityService.DeleteConfigArgs.Target', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=611,
  serialized_end=679,
)


_DELETECONFIGREPLY = _descriptor.Descriptor(
  name='DeleteConfigReply',
  full_name='NXOSExtensibleManagabilityService.DeleteConfigReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.DeleteConfigReply.ReqID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='YangData', full_name='NXOSExtensibleManagabilityService.DeleteConfigReply.YangData', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Errors', full_name='NXOSExtensibleManagabilityService.DeleteConfigReply.Errors', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=681,
  serialized_end=749,
)


_COPYCONFIGARGS = _descriptor.Descriptor(
  name='CopyConfigArgs',
  full_name='NXOSExtensibleManagabilityService.CopyConfigArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='SessionID', full_name='NXOSExtensibleManagabilityService.CopyConfigArgs.SessionID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.CopyConfigArgs.ReqID', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Source', full_name='NXOSExtensibleManagabilityService.CopyConfigArgs.Source', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Target', full_name='NXOSExtensibleManagabilityService.CopyConfigArgs.Target', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=751,
  serialized_end=833,
)


_COPYCONFIGREPLY = _descriptor.Descriptor(
  name='CopyConfigReply',
  full_name='NXOSExtensibleManagabilityService.CopyConfigReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.CopyConfigReply.ReqID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='YangData', full_name='NXOSExtensibleManagabilityService.CopyConfigReply.YangData', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Errors', full_name='NXOSExtensibleManagabilityService.CopyConfigReply.Errors', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=835,
  serialized_end=901,
)


_LOCKARGS = _descriptor.Descriptor(
  name='LockArgs',
  full_name='NXOSExtensibleManagabilityService.LockArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='SessionID', full_name='NXOSExtensibleManagabilityService.LockArgs.SessionID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.LockArgs.ReqID', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Target', full_name='NXOSExtensibleManagabilityService.LockArgs.Target', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=903,
  serialized_end=963,
)


_LOCKREPLY = _descriptor.Descriptor(
  name='LockReply',
  full_name='NXOSExtensibleManagabilityService.LockReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.LockReply.ReqID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='YangData', full_name='NXOSExtensibleManagabilityService.LockReply.YangData', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Errors', full_name='NXOSExtensibleManagabilityService.LockReply.Errors', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=965,
  serialized_end=1025,
)


_UNLOCKARGS = _descriptor.Descriptor(
  name='UnLockArgs',
  full_name='NXOSExtensibleManagabilityService.UnLockArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='SessionID', full_name='NXOSExtensibleManagabilityService.UnLockArgs.SessionID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.UnLockArgs.ReqID', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Target', full_name='NXOSExtensibleManagabilityService.UnLockArgs.Target', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1027,
  serialized_end=1089,
)


_UNLOCKREPLY = _descriptor.Descriptor(
  name='UnLockReply',
  full_name='NXOSExtensibleManagabilityService.UnLockReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.UnLockReply.ReqID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='YangData', full_name='NXOSExtensibleManagabilityService.UnLockReply.YangData', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Errors', full_name='NXOSExtensibleManagabilityService.UnLockReply.Errors', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1091,
  serialized_end=1153,
)


_SESSIONARGS = _descriptor.Descriptor(
  name='SessionArgs',
  full_name='NXOSExtensibleManagabilityService.SessionArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.SessionArgs.ReqID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1155,
  serialized_end=1183,
)


_SESSIONREPLY = _descriptor.Descriptor(
  name='SessionReply',
  full_name='NXOSExtensibleManagabilityService.SessionReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.SessionReply.ReqID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='SessionID', full_name='NXOSExtensibleManagabilityService.SessionReply.SessionID', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Errors', full_name='NXOSExtensibleManagabilityService.SessionReply.Errors', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1185,
  serialized_end=1249,
)


_CLOSESESSIONARGS = _descriptor.Descriptor(
  name='CloseSessionArgs',
  full_name='NXOSExtensibleManagabilityService.CloseSessionArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.CloseSessionArgs.ReqID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='SessionID', full_name='NXOSExtensibleManagabilityService.CloseSessionArgs.SessionID', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1251,
  serialized_end=1303,
)


_CLOSESESSIONREPLY = _descriptor.Descriptor(
  name='CloseSessionReply',
  full_name='NXOSExtensibleManagabilityService.CloseSessionReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.CloseSessionReply.ReqID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='YangData', full_name='NXOSExtensibleManagabilityService.CloseSessionReply.YangData', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Errors', full_name='NXOSExtensibleManagabilityService.CloseSessionReply.Errors', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1305,
  serialized_end=1373,
)


_KILLARGS = _descriptor.Descriptor(
  name='KillArgs',
  full_name='NXOSExtensibleManagabilityService.KillArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='SessionID', full_name='NXOSExtensibleManagabilityService.KillArgs.SessionID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='SessionIDToKill', full_name='NXOSExtensibleManagabilityService.KillArgs.SessionIDToKill', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.KillArgs.ReqID', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1375,
  serialized_end=1444,
)


_KILLREPLY = _descriptor.Descriptor(
  name='KillReply',
  full_name='NXOSExtensibleManagabilityService.KillReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.KillReply.ReqID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='YangData', full_name='NXOSExtensibleManagabilityService.KillReply.YangData', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Errors', full_name='NXOSExtensibleManagabilityService.KillReply.Errors', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1446,
  serialized_end=1506,
)


_VALIDATEARGS = _descriptor.Descriptor(
  name='ValidateArgs',
  full_name='NXOSExtensibleManagabilityService.ValidateArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='SessionID', full_name='NXOSExtensibleManagabilityService.ValidateArgs.SessionID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ReqId', full_name='NXOSExtensibleManagabilityService.ValidateArgs.ReqId', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1508,
  serialized_end=1556,
)


_VALIDATEREPLY = _descriptor.Descriptor(
  name='ValidateReply',
  full_name='NXOSExtensibleManagabilityService.ValidateReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.ValidateReply.ReqID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='YangData', full_name='NXOSExtensibleManagabilityService.ValidateReply.YangData', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Errors', full_name='NXOSExtensibleManagabilityService.ValidateReply.Errors', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1558,
  serialized_end=1622,
)


_COMMITARGS = _descriptor.Descriptor(
  name='CommitArgs',
  full_name='NXOSExtensibleManagabilityService.CommitArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='SessionID', full_name='NXOSExtensibleManagabilityService.CommitArgs.SessionID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ReqId', full_name='NXOSExtensibleManagabilityService.CommitArgs.ReqId', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1624,
  serialized_end=1670,
)


_COMMITREPLY = _descriptor.Descriptor(
  name='CommitReply',
  full_name='NXOSExtensibleManagabilityService.CommitReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.CommitReply.ReqID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='YangData', full_name='NXOSExtensibleManagabilityService.CommitReply.YangData', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Errors', full_name='NXOSExtensibleManagabilityService.CommitReply.Errors', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1672,
  serialized_end=1734,
)


_ABORTARGS = _descriptor.Descriptor(
  name='AbortArgs',
  full_name='NXOSExtensibleManagabilityService.AbortArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='SessionID', full_name='NXOSExtensibleManagabilityService.AbortArgs.SessionID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ReqId', full_name='NXOSExtensibleManagabilityService.AbortArgs.ReqId', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1736,
  serialized_end=1781,
)


_ABORTREPLY = _descriptor.Descriptor(
  name='AbortReply',
  full_name='NXOSExtensibleManagabilityService.AbortReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ReqID', full_name='NXOSExtensibleManagabilityService.AbortReply.ReqID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='YangData', full_name='NXOSExtensibleManagabilityService.AbortReply.YangData', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Errors', full_name='NXOSExtensibleManagabilityService.AbortReply.Errors', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1783,
  serialized_end=1844,
)

DESCRIPTOR.message_types_by_name['GetConfigArgs'] = _GETCONFIGARGS
DESCRIPTOR.message_types_by_name['GetConfigReply'] = _GETCONFIGREPLY
DESCRIPTOR.message_types_by_name['GetOperArgs'] = _GETOPERARGS
DESCRIPTOR.message_types_by_name['GetOperReply'] = _GETOPERREPLY
DESCRIPTOR.message_types_by_name['GetArgs'] = _GETARGS
DESCRIPTOR.message_types_by_name['GetReply'] = _GETREPLY
DESCRIPTOR.message_types_by_name['EditConfigArgs'] = _EDITCONFIGARGS
DESCRIPTOR.message_types_by_name['EditConfigReply'] = _EDITCONFIGREPLY
DESCRIPTOR.message_types_by_name['DeleteConfigArgs'] = _DELETECONFIGARGS
DESCRIPTOR.message_types_by_name['DeleteConfigReply'] = _DELETECONFIGREPLY
DESCRIPTOR.message_types_by_name['CopyConfigArgs'] = _COPYCONFIGARGS
DESCRIPTOR.message_types_by_name['CopyConfigReply'] = _COPYCONFIGREPLY
DESCRIPTOR.message_types_by_name['LockArgs'] = _LOCKARGS
DESCRIPTOR.message_types_by_name['LockReply'] = _LOCKREPLY
DESCRIPTOR.message_types_by_name['UnLockArgs'] = _UNLOCKARGS
DESCRIPTOR.message_types_by_name['UnLockReply'] = _UNLOCKREPLY
DESCRIPTOR.message_types_by_name['SessionArgs'] = _SESSIONARGS
DESCRIPTOR.message_types_by_name['SessionReply'] = _SESSIONREPLY
DESCRIPTOR.message_types_by_name['CloseSessionArgs'] = _CLOSESESSIONARGS
DESCRIPTOR.message_types_by_name['CloseSessionReply'] = _CLOSESESSIONREPLY
DESCRIPTOR.message_types_by_name['KillArgs'] = _KILLARGS
DESCRIPTOR.message_types_by_name['KillReply'] = _KILLREPLY
DESCRIPTOR.message_types_by_name['ValidateArgs'] = _VALIDATEARGS
DESCRIPTOR.message_types_by_name['ValidateReply'] = _VALIDATEREPLY
DESCRIPTOR.message_types_by_name['CommitArgs'] = _COMMITARGS
DESCRIPTOR.message_types_by_name['CommitReply'] = _COMMITREPLY
DESCRIPTOR.message_types_by_name['AbortArgs'] = _ABORTARGS
DESCRIPTOR.message_types_by_name['AbortReply'] = _ABORTREPLY

GetConfigArgs = _reflection.GeneratedProtocolMessageType('GetConfigArgs', (_message.Message,), dict(
  DESCRIPTOR = _GETCONFIGARGS,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.GetConfigArgs)
  ))
_sym_db.RegisterMessage(GetConfigArgs)

GetConfigReply = _reflection.GeneratedProtocolMessageType('GetConfigReply', (_message.Message,), dict(
  DESCRIPTOR = _GETCONFIGREPLY,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.GetConfigReply)
  ))
_sym_db.RegisterMessage(GetConfigReply)

GetOperArgs = _reflection.GeneratedProtocolMessageType('GetOperArgs', (_message.Message,), dict(
  DESCRIPTOR = _GETOPERARGS,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.GetOperArgs)
  ))
_sym_db.RegisterMessage(GetOperArgs)

GetOperReply = _reflection.GeneratedProtocolMessageType('GetOperReply', (_message.Message,), dict(
  DESCRIPTOR = _GETOPERREPLY,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.GetOperReply)
  ))
_sym_db.RegisterMessage(GetOperReply)

GetArgs = _reflection.GeneratedProtocolMessageType('GetArgs', (_message.Message,), dict(
  DESCRIPTOR = _GETARGS,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.GetArgs)
  ))
_sym_db.RegisterMessage(GetArgs)

GetReply = _reflection.GeneratedProtocolMessageType('GetReply', (_message.Message,), dict(
  DESCRIPTOR = _GETREPLY,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.GetReply)
  ))
_sym_db.RegisterMessage(GetReply)

EditConfigArgs = _reflection.GeneratedProtocolMessageType('EditConfigArgs', (_message.Message,), dict(
  DESCRIPTOR = _EDITCONFIGARGS,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.EditConfigArgs)
  ))
_sym_db.RegisterMessage(EditConfigArgs)

EditConfigReply = _reflection.GeneratedProtocolMessageType('EditConfigReply', (_message.Message,), dict(
  DESCRIPTOR = _EDITCONFIGREPLY,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.EditConfigReply)
  ))
_sym_db.RegisterMessage(EditConfigReply)

DeleteConfigArgs = _reflection.GeneratedProtocolMessageType('DeleteConfigArgs', (_message.Message,), dict(
  DESCRIPTOR = _DELETECONFIGARGS,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.DeleteConfigArgs)
  ))
_sym_db.RegisterMessage(DeleteConfigArgs)

DeleteConfigReply = _reflection.GeneratedProtocolMessageType('DeleteConfigReply', (_message.Message,), dict(
  DESCRIPTOR = _DELETECONFIGREPLY,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.DeleteConfigReply)
  ))
_sym_db.RegisterMessage(DeleteConfigReply)

CopyConfigArgs = _reflection.GeneratedProtocolMessageType('CopyConfigArgs', (_message.Message,), dict(
  DESCRIPTOR = _COPYCONFIGARGS,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.CopyConfigArgs)
  ))
_sym_db.RegisterMessage(CopyConfigArgs)

CopyConfigReply = _reflection.GeneratedProtocolMessageType('CopyConfigReply', (_message.Message,), dict(
  DESCRIPTOR = _COPYCONFIGREPLY,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.CopyConfigReply)
  ))
_sym_db.RegisterMessage(CopyConfigReply)

LockArgs = _reflection.GeneratedProtocolMessageType('LockArgs', (_message.Message,), dict(
  DESCRIPTOR = _LOCKARGS,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.LockArgs)
  ))
_sym_db.RegisterMessage(LockArgs)

LockReply = _reflection.GeneratedProtocolMessageType('LockReply', (_message.Message,), dict(
  DESCRIPTOR = _LOCKREPLY,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.LockReply)
  ))
_sym_db.RegisterMessage(LockReply)

UnLockArgs = _reflection.GeneratedProtocolMessageType('UnLockArgs', (_message.Message,), dict(
  DESCRIPTOR = _UNLOCKARGS,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.UnLockArgs)
  ))
_sym_db.RegisterMessage(UnLockArgs)

UnLockReply = _reflection.GeneratedProtocolMessageType('UnLockReply', (_message.Message,), dict(
  DESCRIPTOR = _UNLOCKREPLY,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.UnLockReply)
  ))
_sym_db.RegisterMessage(UnLockReply)

SessionArgs = _reflection.GeneratedProtocolMessageType('SessionArgs', (_message.Message,), dict(
  DESCRIPTOR = _SESSIONARGS,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.SessionArgs)
  ))
_sym_db.RegisterMessage(SessionArgs)

SessionReply = _reflection.GeneratedProtocolMessageType('SessionReply', (_message.Message,), dict(
  DESCRIPTOR = _SESSIONREPLY,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.SessionReply)
  ))
_sym_db.RegisterMessage(SessionReply)

CloseSessionArgs = _reflection.GeneratedProtocolMessageType('CloseSessionArgs', (_message.Message,), dict(
  DESCRIPTOR = _CLOSESESSIONARGS,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.CloseSessionArgs)
  ))
_sym_db.RegisterMessage(CloseSessionArgs)

CloseSessionReply = _reflection.GeneratedProtocolMessageType('CloseSessionReply', (_message.Message,), dict(
  DESCRIPTOR = _CLOSESESSIONREPLY,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.CloseSessionReply)
  ))
_sym_db.RegisterMessage(CloseSessionReply)

KillArgs = _reflection.GeneratedProtocolMessageType('KillArgs', (_message.Message,), dict(
  DESCRIPTOR = _KILLARGS,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.KillArgs)
  ))
_sym_db.RegisterMessage(KillArgs)

KillReply = _reflection.GeneratedProtocolMessageType('KillReply', (_message.Message,), dict(
  DESCRIPTOR = _KILLREPLY,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.KillReply)
  ))
_sym_db.RegisterMessage(KillReply)

ValidateArgs = _reflection.GeneratedProtocolMessageType('ValidateArgs', (_message.Message,), dict(
  DESCRIPTOR = _VALIDATEARGS,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.ValidateArgs)
  ))
_sym_db.RegisterMessage(ValidateArgs)

ValidateReply = _reflection.GeneratedProtocolMessageType('ValidateReply', (_message.Message,), dict(
  DESCRIPTOR = _VALIDATEREPLY,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.ValidateReply)
  ))
_sym_db.RegisterMessage(ValidateReply)

CommitArgs = _reflection.GeneratedProtocolMessageType('CommitArgs', (_message.Message,), dict(
  DESCRIPTOR = _COMMITARGS,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.CommitArgs)
  ))
_sym_db.RegisterMessage(CommitArgs)

CommitReply = _reflection.GeneratedProtocolMessageType('CommitReply', (_message.Message,), dict(
  DESCRIPTOR = _COMMITREPLY,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.CommitReply)
  ))
_sym_db.RegisterMessage(CommitReply)

AbortArgs = _reflection.GeneratedProtocolMessageType('AbortArgs', (_message.Message,), dict(
  DESCRIPTOR = _ABORTARGS,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.AbortArgs)
  ))
_sym_db.RegisterMessage(AbortArgs)

AbortReply = _reflection.GeneratedProtocolMessageType('AbortReply', (_message.Message,), dict(
  DESCRIPTOR = _ABORTREPLY,
  __module__ = 'nxos_grpc_pb2'
  # @@protoc_insertion_point(class_scope:NXOSExtensibleManagabilityService.AbortReply)
  ))
_sym_db.RegisterMessage(AbortReply)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class gRPCConfigOperStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetConfig = channel.unary_stream(
          '/NXOSExtensibleManagabilityService.gRPCConfigOper/GetConfig',
          request_serializer=GetConfigArgs.SerializeToString,
          response_deserializer=GetConfigReply.FromString,
          )
      self.Get = channel.unary_stream(
          '/NXOSExtensibleManagabilityService.gRPCConfigOper/Get',
          request_serializer=GetArgs.SerializeToString,
          response_deserializer=GetReply.FromString,
          )
      self.GetOper = channel.unary_stream(
          '/NXOSExtensibleManagabilityService.gRPCConfigOper/GetOper',
          request_serializer=GetOperArgs.SerializeToString,
          response_deserializer=GetOperReply.FromString,
          )
      self.EditConfig = channel.unary_unary(
          '/NXOSExtensibleManagabilityService.gRPCConfigOper/EditConfig',
          request_serializer=EditConfigArgs.SerializeToString,
          response_deserializer=EditConfigReply.FromString,
          )
      self.DeleteConfig = channel.unary_unary(
          '/NXOSExtensibleManagabilityService.gRPCConfigOper/DeleteConfig',
          request_serializer=DeleteConfigArgs.SerializeToString,
          response_deserializer=DeleteConfigReply.FromString,
          )
      self.CopyConfig = channel.unary_unary(
          '/NXOSExtensibleManagabilityService.gRPCConfigOper/CopyConfig',
          request_serializer=CopyConfigArgs.SerializeToString,
          response_deserializer=CopyConfigReply.FromString,
          )
      self.StartSession = channel.unary_unary(
          '/NXOSExtensibleManagabilityService.gRPCConfigOper/StartSession',
          request_serializer=SessionArgs.SerializeToString,
          response_deserializer=SessionReply.FromString,
          )
      self.CloseSession = channel.unary_unary(
          '/NXOSExtensibleManagabilityService.gRPCConfigOper/CloseSession',
          request_serializer=CloseSessionArgs.SerializeToString,
          response_deserializer=CloseSessionReply.FromString,
          )
      self.KillSession = channel.unary_unary(
          '/NXOSExtensibleManagabilityService.gRPCConfigOper/KillSession',
          request_serializer=KillArgs.SerializeToString,
          response_deserializer=KillReply.FromString,
          )
      self.Lock = channel.unary_unary(
          '/NXOSExtensibleManagabilityService.gRPCConfigOper/Lock',
          request_serializer=LockArgs.SerializeToString,
          response_deserializer=LockReply.FromString,
          )
      self.UnLock = channel.unary_unary(
          '/NXOSExtensibleManagabilityService.gRPCConfigOper/UnLock',
          request_serializer=UnLockArgs.SerializeToString,
          response_deserializer=UnLockReply.FromString,
          )
      self.Commit = channel.unary_unary(
          '/NXOSExtensibleManagabilityService.gRPCConfigOper/Commit',
          request_serializer=CommitArgs.SerializeToString,
          response_deserializer=CommitReply.FromString,
          )
      self.Validate = channel.unary_unary(
          '/NXOSExtensibleManagabilityService.gRPCConfigOper/Validate',
          request_serializer=ValidateArgs.SerializeToString,
          response_deserializer=ValidateReply.FromString,
          )
      self.Abort = channel.unary_unary(
          '/NXOSExtensibleManagabilityService.gRPCConfigOper/Abort',
          request_serializer=AbortArgs.SerializeToString,
          response_deserializer=AbortReply.FromString,
          )


  class gRPCConfigOperServicer(object):

    def GetConfig(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetOper(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def EditConfig(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteConfig(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CopyConfig(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def StartSession(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CloseSession(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def KillSession(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Lock(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UnLock(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Commit(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Validate(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Abort(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_gRPCConfigOperServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetConfig': grpc.unary_stream_rpc_method_handler(
            servicer.GetConfig,
            request_deserializer=GetConfigArgs.FromString,
            response_serializer=GetConfigReply.SerializeToString,
        ),
        'Get': grpc.unary_stream_rpc_method_handler(
            servicer.Get,
            request_deserializer=GetArgs.FromString,
            response_serializer=GetReply.SerializeToString,
        ),
        'GetOper': grpc.unary_stream_rpc_method_handler(
            servicer.GetOper,
            request_deserializer=GetOperArgs.FromString,
            response_serializer=GetOperReply.SerializeToString,
        ),
        'EditConfig': grpc.unary_unary_rpc_method_handler(
            servicer.EditConfig,
            request_deserializer=EditConfigArgs.FromString,
            response_serializer=EditConfigReply.SerializeToString,
        ),
        'DeleteConfig': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteConfig,
            request_deserializer=DeleteConfigArgs.FromString,
            response_serializer=DeleteConfigReply.SerializeToString,
        ),
        'CopyConfig': grpc.unary_unary_rpc_method_handler(
            servicer.CopyConfig,
            request_deserializer=CopyConfigArgs.FromString,
            response_serializer=CopyConfigReply.SerializeToString,
        ),
        'StartSession': grpc.unary_unary_rpc_method_handler(
            servicer.StartSession,
            request_deserializer=SessionArgs.FromString,
            response_serializer=SessionReply.SerializeToString,
        ),
        'CloseSession': grpc.unary_unary_rpc_method_handler(
            servicer.CloseSession,
            request_deserializer=CloseSessionArgs.FromString,
            response_serializer=CloseSessionReply.SerializeToString,
        ),
        'KillSession': grpc.unary_unary_rpc_method_handler(
            servicer.KillSession,
            request_deserializer=KillArgs.FromString,
            response_serializer=KillReply.SerializeToString,
        ),
        'Lock': grpc.unary_unary_rpc_method_handler(
            servicer.Lock,
            request_deserializer=LockArgs.FromString,
            response_serializer=LockReply.SerializeToString,
        ),
        'UnLock': grpc.unary_unary_rpc_method_handler(
            servicer.UnLock,
            request_deserializer=UnLockArgs.FromString,
            response_serializer=UnLockReply.SerializeToString,
        ),
        'Commit': grpc.unary_unary_rpc_method_handler(
            servicer.Commit,
            request_deserializer=CommitArgs.FromString,
            response_serializer=CommitReply.SerializeToString,
        ),
        'Validate': grpc.unary_unary_rpc_method_handler(
            servicer.Validate,
            request_deserializer=ValidateArgs.FromString,
            response_serializer=ValidateReply.SerializeToString,
        ),
        'Abort': grpc.unary_unary_rpc_method_handler(
            servicer.Abort,
            request_deserializer=AbortArgs.FromString,
            response_serializer=AbortReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'NXOSExtensibleManagabilityService.gRPCConfigOper', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetagRPCConfigOperServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def GetConfig(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Get(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetOper(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def EditConfig(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteConfig(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CopyConfig(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def StartSession(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CloseSession(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def KillSession(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Lock(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UnLock(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Commit(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Validate(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Abort(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetagRPCConfigOperStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def GetConfig(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    def Get(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    def GetOper(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    def EditConfig(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    EditConfig.future = None
    def DeleteConfig(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    DeleteConfig.future = None
    def CopyConfig(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    CopyConfig.future = None
    def StartSession(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    StartSession.future = None
    def CloseSession(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    CloseSession.future = None
    def KillSession(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    KillSession.future = None
    def Lock(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Lock.future = None
    def UnLock(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    UnLock.future = None
    def Commit(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Commit.future = None
    def Validate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Validate.future = None
    def Abort(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Abort.future = None


  def beta_create_gRPCConfigOper_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Abort'): AbortArgs.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'CloseSession'): CloseSessionArgs.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Commit'): CommitArgs.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'CopyConfig'): CopyConfigArgs.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'DeleteConfig'): DeleteConfigArgs.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'EditConfig'): EditConfigArgs.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Get'): GetArgs.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'GetConfig'): GetConfigArgs.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'GetOper'): GetOperArgs.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'KillSession'): KillArgs.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Lock'): LockArgs.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'StartSession'): SessionArgs.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'UnLock'): UnLockArgs.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Validate'): ValidateArgs.FromString,
    }
    response_serializers = {
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Abort'): AbortReply.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'CloseSession'): CloseSessionReply.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Commit'): CommitReply.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'CopyConfig'): CopyConfigReply.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'DeleteConfig'): DeleteConfigReply.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'EditConfig'): EditConfigReply.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Get'): GetReply.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'GetConfig'): GetConfigReply.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'GetOper'): GetOperReply.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'KillSession'): KillReply.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Lock'): LockReply.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'StartSession'): SessionReply.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'UnLock'): UnLockReply.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Validate'): ValidateReply.SerializeToString,
    }
    method_implementations = {
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Abort'): face_utilities.unary_unary_inline(servicer.Abort),
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'CloseSession'): face_utilities.unary_unary_inline(servicer.CloseSession),
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Commit'): face_utilities.unary_unary_inline(servicer.Commit),
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'CopyConfig'): face_utilities.unary_unary_inline(servicer.CopyConfig),
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'DeleteConfig'): face_utilities.unary_unary_inline(servicer.DeleteConfig),
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'EditConfig'): face_utilities.unary_unary_inline(servicer.EditConfig),
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Get'): face_utilities.unary_stream_inline(servicer.Get),
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'GetConfig'): face_utilities.unary_stream_inline(servicer.GetConfig),
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'GetOper'): face_utilities.unary_stream_inline(servicer.GetOper),
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'KillSession'): face_utilities.unary_unary_inline(servicer.KillSession),
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Lock'): face_utilities.unary_unary_inline(servicer.Lock),
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'StartSession'): face_utilities.unary_unary_inline(servicer.StartSession),
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'UnLock'): face_utilities.unary_unary_inline(servicer.UnLock),
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Validate'): face_utilities.unary_unary_inline(servicer.Validate),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_gRPCConfigOper_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Abort'): AbortArgs.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'CloseSession'): CloseSessionArgs.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Commit'): CommitArgs.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'CopyConfig'): CopyConfigArgs.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'DeleteConfig'): DeleteConfigArgs.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'EditConfig'): EditConfigArgs.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Get'): GetArgs.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'GetConfig'): GetConfigArgs.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'GetOper'): GetOperArgs.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'KillSession'): KillArgs.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Lock'): LockArgs.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'StartSession'): SessionArgs.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'UnLock'): UnLockArgs.SerializeToString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Validate'): ValidateArgs.SerializeToString,
    }
    response_deserializers = {
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Abort'): AbortReply.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'CloseSession'): CloseSessionReply.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Commit'): CommitReply.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'CopyConfig'): CopyConfigReply.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'DeleteConfig'): DeleteConfigReply.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'EditConfig'): EditConfigReply.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Get'): GetReply.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'GetConfig'): GetConfigReply.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'GetOper'): GetOperReply.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'KillSession'): KillReply.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Lock'): LockReply.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'StartSession'): SessionReply.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'UnLock'): UnLockReply.FromString,
      ('NXOSExtensibleManagabilityService.gRPCConfigOper', 'Validate'): ValidateReply.FromString,
    }
    cardinalities = {
      'Abort': cardinality.Cardinality.UNARY_UNARY,
      'CloseSession': cardinality.Cardinality.UNARY_UNARY,
      'Commit': cardinality.Cardinality.UNARY_UNARY,
      'CopyConfig': cardinality.Cardinality.UNARY_UNARY,
      'DeleteConfig': cardinality.Cardinality.UNARY_UNARY,
      'EditConfig': cardinality.Cardinality.UNARY_UNARY,
      'Get': cardinality.Cardinality.UNARY_STREAM,
      'GetConfig': cardinality.Cardinality.UNARY_STREAM,
      'GetOper': cardinality.Cardinality.UNARY_STREAM,
      'KillSession': cardinality.Cardinality.UNARY_UNARY,
      'Lock': cardinality.Cardinality.UNARY_UNARY,
      'StartSession': cardinality.Cardinality.UNARY_UNARY,
      'UnLock': cardinality.Cardinality.UNARY_UNARY,
      'Validate': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'NXOSExtensibleManagabilityService.gRPCConfigOper', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
